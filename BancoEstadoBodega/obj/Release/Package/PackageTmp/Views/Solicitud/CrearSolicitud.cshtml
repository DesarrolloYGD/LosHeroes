@model BancoEstadoBodega.Models.ProductoViewModel
@{
    ViewBag.Title = "Creación de Solicitud";
}

<h2>Agregar Solicitud</h2>
<div>
    <form action="@Url.Action("CrearSolicitud", "Solicitud")" id="forma" enctype="multipart/form-data" method="post">
        
        <div class="modal-body">
            <div class="input-group">
                <span class="input-group-addon">Descripción</span>
                <input type="text" class="form-control" name="descripcion" placeholder="Descripción" maxlength="150" required>
            </div>
            <br />
            <div class="input-group">
                <span class="input-group-addon">Tipo Despacho</span>
                @Html.DropDownList("idTipoDespacho", null, "Seleccione", htmlAttributes: new { @class = "form-control input-sm" })
            </div>
            <br />
            <div class="input-group">
                <span class="input-group-addon">Destino</span>
                <input type="text" class="form-control" name="destino" placeholder="Destino" required>
            </div>
            <br />
            <div class="input-group">
                <span class="input-group-addon">Area</span>
                @Html.DropDownList("idArea", null, "Seleccione", htmlAttributes: new { @class = "form-control input-sm" })
            </div>
            <br />
            <div class="input-group">
                <span class="input-group-addon">Usuario Mandante</span>
                <input type="text" class="form-control" name="usuarioMandante" placeholder="Usuario Mandante" maxlength="100" required>
            </div>
            <br />
            <div class="input-group">
                <span class="input-group-addon">Usuario Receptor</span>
                <input type="text" class="form-control" name="usuarioReceptor" placeholder="Usuario Receptor" required>
            </div>
            <br />
            <div class="input-group">
                <span class="input-group-addon">Observación</span>
                <input type="text" class="form-control" name="observacion" placeholder="Observación" required>
            </div>
            <br />
            <div class="input-group">
                <!--pendiente agregar productos a la tabla-->
                <input type="hidden" class="form-control" id="estado" name="estado" placeholder="Estado" value="" />

            </div>
            <div>

            </div>
            <div>
                <table id="tbProductos" class="table table-striped table-bordered">
                    <tr class="success">
                        <td width="75%" class="text-center">
                            Producto
                        </td>
                        <td width="25%" class="text-center">
                            Cantidad
                        </td>
                    </tr>
                    <tr class="success">
                        <td width="75%" class="text-center">
                            @Html.DropDownList("Productos", Model.PRODUCTO, "Seleccione...", htmlAttributes: new { @class = "form-control input-sm" })
                        </td>
                        <td class="text-center"><input type="number" id="cantidadMaxima"  min="0" placeholder="Seleccione Producto"></td>
                    </tr>
                </table>
                <br>
                <input type="button" id="add" value="Agregar Producto" class="bottom-right" onclick="agregar()">
                <input type="button" value="Eliminar" class="glyphicon-sort-by-attributes" onclick="borrarUltima()">
            </div>
        </div>
        <div class="modal-footer">
            <button type="button" class="btn btn-default" data-dismiss="modal">Cancelar</button>
            <button type="button" id="finish" class="btn btn-primary" onclick="validarForm()">Agregar Solicitud</button>
        </div>

    </form>

  
</div>

<asp:label id="lbl" runat="server" style="visibility:hidden"></asp:label>




<script type="text/javascript">
    $(document).ready(function () {
        $('#example').DataTable();
        $('[rel="popover"]').popover({
            container: 'body',
            html: true,
            content: function () {
                var clone = $($(this).data('popover-content')).clone(true).removeClass('hide');
                return clone;
            }
        }).click(function (e) {
            e.preventDefault();
        });
    });


    var contLin = 0;
    function agregar() {
        //var tr, td;
        if ($('#Productos').val() == 0) {
            alert('Por favor seleccione un producto');
        } else {
            if ($('#cantidadMaxima').val() == 0) {
                alert('El valor seleccionado no es valido o no posee stock');
            } else {
                var item = $('#Productos').val();//Se obtiene el id del producto
                var valor = $('#cantidadMaxima').val();
                tr = document.all.tbProductos.insertRow();
                td = tr.insertCell();
                //td.innerHTML = "@@"+ "Html.DropDownList('idProducto2', null, '', htmlAttributes: new { " +"@@" +  "class = 'form-control input-sm' })";
                //td.innerHTML = "<label id='lbl1" + contLin +"'>" + $('#idProducto').selected.text +"</label>";
                td.innerHTML = $("#Productos option:selected").text();//se agrega el nombre del producto
                td = tr.insertCell();
                td.innerHTML = $('#cantidadMaxima').val();
                contLin++;
                lbl.textContent = lbl.textContent + item + "v" + valor + ",";


                $("#estado").val(lbl.textContent);


            }

        }



    }
    function borrarUltima() {

        if (contLin >= 1) {
            ultima = document.all.tbProductos.rows.length - 1;
            document.all.tbProductos.deleteRow(ultima);
            contLin--;
            var prod = lbl.textContent.split(',');
            var count = prod.length;
            var cant = 0;
            var nuevos = '';
            while (cant < count - 2) {
                nuevos = nuevos + prod[cant] + ",";
                cant++;
            }
            lbl.textContent = nuevos;
            $("#estado").val(lbl.textContent);
        } else
        {
            alert('No hay mas elementos para eliminar en la lista');

        }
        
    }

    function validarForm()
    {
        if (contLin == 0) {
            alert('Debe agregar al menos un producto a la solicitud');
        } else
        {
            document.getElementById("forma").submit();
        }
        }
</script>

@*<script type="text/javascript">
    $(function () {

        $("[name='Productos']").change(function () {
            $("#cantidadMaxima").val($(this).val());

        });
    });

</script>*@

<script type="text/javascript">
    $(document).ready(function () {
        $(function () {
            $("[name='Productos']").change(function () {
                $("#cantidadMaxima").val("");
                var v = $(this).val();
                var url = "@Url.Action("StockMaximo","Solicitud")";
                $.getJSON(url, { id: v }, function (data) {

                    //$("#cantidadMaxima").val(data);
                    var max = data;
                    $("#cantidadMaxima").attr("placeholder", "Stock disponible: "+data);
                    $("#cantidadMaxima").attr("max", data);
                    $("#cantidadMaxima").val(data);
                    $("#cantidadMaxima").change(function () {
                        if ($(this).val() > max || $(this).val() < 0) {
                            alert('cantidad mayor al stock actual');
                            document.getElementById("add").disabled = true;
                        } else {
                            document.getElementById("add").disabled = false;
                        }
                    });
                });
            });
        });
    });

    
</script>

